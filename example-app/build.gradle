plugins {
    id "java"
    id "application"
    id "kotlin"
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'org.beryx.jlink' version '2.12.0'

}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "csense.kotlin:csense-kotlin-jvm:$csenseKotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-javafx:$coroutinesVersion"
    implementation project(":csense-javafx")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-Xuse-experimental=kotlin.contracts.ExperimentalContracts",
                            "-Xuse-experimental=kotlin.Experimental"]
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

mainClassName = "csense.example.app.MainKt"

//
//tasks.register("runJar") { it ->
//    it.outputs.dir file("$projectDir/src/main/kotlin/csense/example/app/generated/")
//    it.inputs.dir file("$projectDir/src/main/resources/")
//    doFirst {
//        javaexec {
//            main = "-jar"
//            args = [
//                    "$projectDir/../resource-compiler/compiler.jar",
//                    "../example-app",
//                    "src/main/kotlin",
//                    "src/main/resources",
//                    "csense.example.app.generated",
//                    "resources.kt",
//                    "internal",
//                    "true"
//            ]
//        }
//    }
//}

//tasks.assemble.dependsOn tasks.runJar
//tasks.build.dependsOn tasks.runJar
//tasks.compileKotlin.dependsOn tasks.runJar
//tasks.compileJava.dependsOn tasks.runJar

javafx {
    version = "12.0.1"
    modules = [
            "javafx.base",
            "javafx.controls",
            "javafx.fxml",
            "javafx.graphics",
            "javafx.media",
            "javafx.swing",
            "javafx.web"]

}


jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'csense.example.app'
    }
}
